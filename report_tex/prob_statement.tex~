\section{Problem Statement} \label{prob_st}
Formally, \ap proposes techniques for the automatic patch-based exploit generation problem: given a program $P$, and a patched version of the same program, $P'$, automatically generate an exploit for the potentially unknown vulnerability in $P$ but patched in $P'$. Furthermore, the work targets input validation vulnerabilities only: vulnerabilities arising out of invalid inputs to the program. Hence, the attack can be modelled as a constraint satisfaction problem, with the constraint that an input fail the input sanitisation checks added in $P'$ with an assumption that there is an exploit corresponding to a given input validation vulnerability. \ap argues that given that the delivery of patches is staggered over long time periods, there is a realistic time window in which unpatched systems are vulnerable to attack.